[ ヴァーレントゥーガの戦場マップ(.map)ファイルの書式説明 ]

　最初の２バイトは横と縦が 1バイト整数で記録されてます。
なので、フォーマット的にマップの最大サイズは 255 x 255 です。


　以降はタイルのデータが二次元配列として順番に記録されてます。
3 x 2 のマップなら、データの並び順は次のような感じです。
(0,0) (0,1) (0,2) (1,0) (1,1) (1,2)

　一つのタイルのデータの終端は 0xFF です。
なので、3 x 2 のマップサイズなら 6個の 0xFF が存在します。


　一つのタイルのデータに複数の項目
「field : 地形やマップチップの名前」
「object : 建物や城壁などオブジェクトの名前」
「unit : 防衛部隊を含む文字変数、配置位置、退却位置などの文字列」
を入れることができます。
それぞれの項目の終端は 0xFE です。

　field と unit はそれぞれ一個だけです。
異なる地形を同じタイルに設定することはできません。
複数のユニットを同じタイルに置くことはできません。

　フォーマット的には複数の object を同じタイルに置くことも可能ですが、
ヴァーレントゥーガの本家シナリオでは一個だけのようです。
オリシナによっては複数置いてるマップもあるかもしれません。


　タイルのデータに含まれる３種類の項目 field, object, unit は
先頭の１バイトで識別します。
0x00 = field
0x01 = object
それ以外 = unit

unitの場合は、1バイトを 4-bit ずつに分けます。
下位 4-bit - 2 = 方向
上位 4-bit = 陣形

方向 = {"N", "NW", "W", "SW", "S", "SE", "E", "NE" }
方向は８種類で、0 ~ 7 の値なので、
実際にファイルに記録される 4-bit の値は 2 ~ 9 になります。

通常戦闘での陣形 = { "自動横列", "方向横列", "自動密集", "方向密集" }
イベントでの陣形 = { "方陣", "横列", "縦列", "密集" }
陣形は４種類で、0 ~ 3 の値になります。
通常の戦闘と、戦争イベントの戦闘では、陣形の意味が変わるようです。

上位と下位を合計すると、最低値が 0x02、最大値が 0x39 になります。
バイナリ・エディターで見ると分かりやすいです。


　タイルのデータが実際にどう保存されるかを例示します。
スペースは分かりやすいように入れてるだけで、
実際のバイトデータには含まれません。

「field = sea0」
という１項目だけを記録する場合は、
「0x00 sea0 0xFE 0xFF」
となります。文字列部分は普通にASCIIバイトです。

「field = grass2」「object = town」
という２項目を記録する場合は、
「0x00 grass2 0xFE 0x01 town 0xFE 0xFF」
となります。

「field = grass」「object = town」「unit = S方向に自動横列の@」
という３項目を記録する場合は、
「0x00 grass 0xFE 0x01 town 0xFE 0x06 @ 0xFE 0xFF」
となります。

